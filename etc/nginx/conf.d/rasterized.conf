
server {
    listen          80;
    server_name     gitlab.rasterized.net;

    location / {
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   Host $http_host;
        proxy_pass  http://192.168.1.150;
    }
}


# server {
#     listen          443 ssl;
#     server_name     openserv.rasterized.net;
    
#     ssl_certificate		        /etc/nginx/certs/rasterized.net.crt;
#     ssl_certificate_key     	/etc/nginx/certs/rasterized.net.key;

#     ssl_protocols           	TLSv1 TLSv1.1 TLSv1.2;
#     ssl_ciphers			        'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
#     ssl_prefer_server_ciphers	on;
#     ssl_session_cache		    shared:SSL:10m;
#     ssl_session_timeout		    10m;

#     location / {
#         proxy_set_header   X-Forwarded-For $remote_addr;
#         proxy_set_header   Host $http_host;
#         proxy_pass  https://openvpn-server;
#     }
# }

# server {
#     listen          443 ssl;
#     server_name     *.rasterized.net;
    
#     ssl_certificate		        /etc/nginx/certs/rasterized.net.crt;
#     ssl_certificate_key     	/etc/nginx/certs/rasterized.net.key;

#     ssl_protocols           	TLSv1 TLSv1.1 TLSv1.2;
#     ssl_ciphers			        'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
#     ssl_prefer_server_ciphers	on;
#     ssl_session_cache		    shared:SSL:10m;
#     ssl_session_timeout		    10m;

#     add_header Content-Type text/plain;

#     return 200 'OK Subdomain';
# }
# server {
#     listen          443 ssl;
#     server_name     rasterized.net;
    
#     ssl_certificate		        /etc/nginx/certs/rasterized.net.crt;
#     ssl_certificate_key     	/etc/nginx/certs/rasterized.net.key;

#     ssl_protocols           	TLSv1 TLSv1.1 TLSv1.2;
#     ssl_ciphers			        'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
#     ssl_prefer_server_ciphers	on;
#     ssl_session_cache		    shared:SSL:10m;
#     ssl_session_timeout		    10m;

#     add_header Content-Type text/plain;

#     location /uploads {
#         sendfile            on;
#         tcp_nodelay         on;
#         access_log          off;
#         aio                 threads;

#         root                /var/www/html/rasterized;
#     }

#     return 200 'OK Domain';
# }